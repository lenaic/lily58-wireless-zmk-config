/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        enter_lorem_ipsum: enter_lorem_ipsum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <0>;
            bindings = <&none &kp LS(F) &kp O &kp X &kp SPACE &kp LS(A) &kp R &kp C &kp H &kp I &kp P &kp E &kp L &kp A &kp G &kp O &kp RET>;
            label = "ENTER_LOREM_IPSUM";
        };

        lorem_ipsum: lorem_ipsum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <0>;
            bindings = <&none &kp LS(F) &kp O &kp X &kp SPACE &kp LS(A) &kp R &kp C &kp H &kp I &kp P &kp E &kp L &kp A &kp G &kp O>;
            label = "LOREM_IPSUM";
        };
    };

    behaviors {
        mod_tap_balanced: mod_tap_balanced {
            compatible = "zmk,behavior-hold-tap";
            label = "MOD_TAP_BALANCED";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            label = "Base";
            bindings = <
&kp GRAVE      &kp N1                     &kp N2  &kp N3     &kp N4    &kp N5                                &kp N6    &kp N7      &kp N8     &kp N9   &kp N0                         &mo 3
&kp TAB        &kp Q                      &kp W   &kp E      &kp R     &kp T                                 &kp Y     &kp U       &kp I      &kp O    &kp P                          &kp BACKSLASH
&mt LCTRL ESC  &mod_tap_balanced LSHFT A  &kp S   &kp D      &kp F     &kp G                                 &kp H     &kp J       &kp K      &kp L    &mod_tap_balanced RSHIFT SEMI  &kp SQT
&mo 2          &kp Z                      &kp X   &kp C      &kp V     &kp B     &mo 3          &none        &kp N     &kp M       &kp COMMA  &kp DOT  &kp FSLH                       &kp RETURN
                                                  &kp LCTRL  &kp LALT  &kp LGUI  &lt 1 SPACE    &lt 2 SPACE  &kp BSPC  &kp RSHIFT  &mo 1
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Lower";
            bindings = <
&enter_lorem_ipsum  &kp LG(MINUS)  &kp LG(PLUS)  &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LS(LG(N5))                                    &kp C_PP        &kp K_VOLUME_DOWN  &kp K_VOL_UP     &kp C_PREV            &kp C_NEXT             &kp ESCAPE
&lorem_ipsum        &kp EXCL       &kp AT        &kp HASH              &kp DOLLAR            &kp PERCENT                                       &kp CARET       &kp AMPS           &kp KP_ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&kp LC(LA(LG(F2)))  &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3          &kp NUMBER_4          &kp N5                                            &kp MINUS       &kp EQUAL          &kp GRAVE        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&kp LG(GRAVE)       &kp NUMBER_6   &kp NUMBER_7  &kp NUMBER_8          &kp NUMBER_9          &kp NUMBER_0    &kp LG(TAB)    &kp LC(LS(SPACE))  &kp UNDERSCORE  &kp PLUS           &kp TILDE        &kp LBRC              &kp RBRC               &trans
                                                 &trans                &trans                &trans          &trans         &kp RETURN         &kp BSPC        &trans             &trans
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Raise";
            bindings = <
&enter_lorem_ipsum  &kp LC(LA(LG(F3)))  &kp LC(LA(LG(F4)))  &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LS(LG(NUMBER_5))                                    &kp C_PP           &kp K_VOL_DN      &kp K_VOL_UP       &kp C_PREV        &kp C_NEXT     &kp F12
&lorem_ipsum        &kp F1              &kp F2              &kp F3                &kp F4                &kp F5                                                  &kp F6             &kp F7            &kp F8             &kp F9            &kp F10        &kp F11
&kp LC(K_POWER)     &kp LEFT_SHIFT      &kp LCTRL           &kp LEFT_ALT          &kp LEFT_COMMAND      &kp LC(LA(LG(F2)))                                      &kp LEFT           &kp DOWN          &kp UP             &kp RIGHT         &kp BSPC       &kp DEL
&trans              &kp LG(Z)           &kp LG(X)           &kp LG(C)             &kp LG(V)             &kp K_MUTE            &kp LG(TAB)    &kp LC(LS(SPACE))  &kp LC(LA(ENTER))  &kp LC(LA(LEFT))  &kp LC(LA(RIGHT))  &kp LC(LA(BSPC))  &kp LC(LA(C))  &kp LC(LA(X))
                                                            &trans                &trans                &trans                &kp RETURN     &trans             &trans             &trans            &trans
            >;
        };

        bluetooth {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &kp BACKSPACE  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &kp N7         &kp N8        &kp N9         &kp KP_SUBTRACT  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &kp N4         &kp N5        &kp N6         &kp KP_PLUS      &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &kp N1         &kp N2        &kp N3         &trans           &trans  &kp RET
                                        &trans        &trans        &trans        &trans    &trans  &kp N0         &kp PERIOD    &trans
            >;
        };
    };
};
